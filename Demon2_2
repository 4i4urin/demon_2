sym s;
% Второй пункт бля

% Шиша
% Wky = (0.035 * s + 1)(0.02777 * s + 1)(0.01695 * s + 1) / +...
% (31.361 * s + 1)(0.0008615 * s + 1)(0.0004498 * s + 1);

% Журов полученный нами
% Wky = (0.0476*s + 1)(0.0256*s + 1)(0.0092*s + 1)/+...
%     (33.3*s + 1)(0.001176*s + 1)(0.000133*s + 1)

% Журов из его файла
% Wky = (0.033 * s + 1)*(0.026 * s + 1)*(0.0055 * s + 1) /+...
%     ((21.8 * s + 1)*(0.00042 * s + 1)*(0.00042 * s + 1));
W_ky_1 = (0.033 * s + 1) / (21.8 * s + 1);
W_ky_2 = (0.026 * s + 1) / (0.00042 * s + 1);
W_ky_3 = (0.0055 * s + 1) / (0.00042 * s + 1);

% Серба
% Wky = (0.04*s + 1)(0.038*s + 1)(0.0095*s + 1)/+...
%     (16.67*s + 1)(0.00092*s + 1)(0.00092*s + 1)

% W = tf([1.22714, 307.501, 16777.8, 260043], [1, 4761.95, 5.66915 * 10^6, 260043]);
% display(W);
% bode(W,1e-2:0.1:1e4); % ЛАФЧХ
% grid on



[num, den] = numden_crutch(W_ky_1);
C1 = capacitor_from_user();

% расчёт фильтра 1
R2 = vpa(num / C1, 4);
R1 = vpa(den / C1 - R2, 4);
disp("С1 = ");
disp(C1);
disp("R1 = ");
disp(R1);
disp("R2 = ");
disp(R2);

disp("Введите значения ближайших сопротивлений из стандартных рядов");
R1 = input("R1 = ");
R2 = input("R2 = ");
frequency_remake(R2 * C1, (R1 + R2) * C1);
% 

W_ky_remake_1 = tf([(R2 * C1), 1], [((R1 + R2) * C1), 1]);
disp("В итоге передаточная функция фильтра 1 будет равна");
display(W_ky_remake_1);

% расчёт фильтра 2
[num, den] = numden_crutch(W_ky_2);
C2 = capacitor_from_user();

k2 = vpa(den / num, 4);
R3 = vpa(num / C2, 4);
R4 = vpa(k2 * R3 / (1 - k2), 4);
disp("С2 = ");
disp(C2);
disp("R3 = ");
disp(R3);
disp("R4 = ");
disp(R4);

disp("Введите значения ближайших сопротивлений из стандартных рядов");
R3 = input("R3 = ");
R4 = input("R4 = ");
frequency_remake(R3 * C2, k2 * R3 * C2);
kek = vpa((R3 * C2 * den / num), 5);
%W_ky_remake_2 = ((R3 * C2) * s + 1) / ((R3 * C2 * k2) * s + 1);
W_ky_remake_2 = tf([(R3 * C2), 1], [kek, 1]);
disp("В итоге передаточная функция фильтра 2 будет равна");
display(W_ky_remake_2);

function [num, den] = numden_crutch(W_ky)
    [n, d] = numden(W_ky);
    n = coeffs(n);
    d = coeffs(d);
    num = n(2) / n(1);
    den = d(2) / d(1);
end

function C1 = capacitor_from_user()
    disp("Введите значения ёмкости (любое стандартное) в ФАРАДАХ");
    C1 = input("C1 = ");
end

function frequency_remake(t, T)
    w1 = vpa(1 / t, 4);
    w2 = vpa(1 / T, 4);
    disp("Уточнённые значения частот сопряженрия");
    disp("w1 = ");
    disp(w1);
    disp("w2 = ");
    disp(w2);
end



